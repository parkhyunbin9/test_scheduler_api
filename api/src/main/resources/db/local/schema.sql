drop table if exists hourly_row_data CASCADE;
create table hourly_row_data (
    row_id bigint generated by default as identity,
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    churn_user bigint,
    cost numeric(19,2),
    aggregate_date date,
    hours integer,
    new_user bigint,
    pay_amount numeric(19,2),
    sales_amount numeric(19,2),
    primary key (row_id)
);

drop table if exists hourly_data CASCADE;
create table hourly_data (
    data_id bigint generated by default as identity,
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    churn_user bigint,
    cost numeric(19,2),
    aggregate_date date,
    hours integer,
    new_user bigint,
    pay_amount numeric(19,2),
    sales_amount numeric(19,2),
    primary key (data_id)
);

drop table if exists daily_summary CASCADE;
create table daily_summary (
    summary_id bigint generated by default as identity,
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    avg_churn_user double,
    avg_cost double,
    avg_new_user double,
    avg_pay_amount double,
    avg_sales_amount double,
    aggregate_date date,
    max_churn_user bigint,
    max_cost numeric(19,2),
    max_new_user bigint,
    max_pay_amount numeric(19,2),
    max_sales_amount numeric(19,2),
    min_churn_user bigint,
    min_cost numeric(19,2),
    min_new_user bigint,
    min_pay_amount numeric(19,2),
    min_sales_amount numeric(19,2),
    sum_churn_user bigint,
    sum_cost numeric(19,2),
    sum_new_user bigint,
    sum_pay_amount numeric(19,2),
    sum_sales_amount numeric(19,2),
    primary key (summary_id)
);

drop table if exists hourly_summary CASCADE;
create table hourly_summary (
    summary_id bigint generated by default as identity,
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    avg_churn_user double,
    avg_cost double,
    avg_new_user double,
    avg_pay_amount double,
    avg_sales_amount double,
    hours integer,
    max_churn_user bigint,
    max_cost numeric(19,2),
    max_new_user bigint,
    max_pay_amount numeric(19,2),
    max_sales_amount numeric(19,2),
    min_churn_user bigint,
    min_cost numeric(19,2),
    min_new_user bigint,
    min_pay_amount numeric(19,2),
    min_sales_amount numeric(19,2),
    sum_churn_user bigint,
    sum_cost numeric(19,2),
    sum_new_user bigint,
    sum_pay_amount numeric(19,2),
    sum_sales_amount numeric(19,2),
    primary key (summary_id)
);

drop table if exists users CASCADE;
create table users (
    user_id bigint generated by default as identity,
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    password varchar(255) not null,
    user_role varchar(20),
    username varchar(50) not null,
    primary key (user_id)
);

drop table if exists refresh_token CASCADE;
create table refresh_token (
    created_date date default current_timestamp,
    last_modified_date date default current_timestamp,
    refresh_token_key varchar(255) not null,
    refresh_token_value varchar(255) not null,
    primary key (refresh_token_key)
);